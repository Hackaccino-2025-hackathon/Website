{
  "timestamp": "2025-04-06T08:35:30.515Z",
  "questions": [
    {
      "questionText": "What is the purpose of the `uint256` type in Solidity?",
      "options": [
        "To store signed integers up to 256 bits",
        "To store unsigned integers up to 256 bits",
        "To store floating-point numbers",
        "To store strings"
      ],
      "correctAnswer": 1,
      "userAnswer": 2,
      "isCorrect": false
    },
    {
      "questionText": "Which data structure in Solidity is most similar to a dictionary or hash table?",
      "options": [
        "Array",
        "Struct",
        "Enum",
        "Mapping"
      ],
      "correctAnswer": 3,
      "userAnswer": 2,
      "isCorrect": false
    },
    {
      "questionText": "What is the purpose of the `onlyOwner` modifier?",
      "options": [
        "To allow only the contract creator to call a function",
        "To restrict access to a function based on time",
        "To make a function payable",
        "To emit an event"
      ],
      "correctAnswer": 0,
      "userAnswer": 2,
      "isCorrect": false
    },
    {
      "questionText": "How can a contract receive Ether?",
      "options": [
        "By using the `receive` function",
        "By using the `payable` modifier on a function",
        "By using the `transfer` function",
        "By emitting an event"
      ],
      "correctAnswer": 1,
      "userAnswer": 2,
      "isCorrect": false
    },
    {
      "questionText": "What keyword is used to inherit properties and functions from another contract?",
      "options": [
        "extends",
        "inherits",
        "is",
        "using"
      ],
      "correctAnswer": 2,
      "userAnswer": 2,
      "isCorrect": true
    }
  ],
  "score": 0
}
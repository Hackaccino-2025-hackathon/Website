{
  "timestamp": "2025-04-05T22:57:58.291Z",
  "questions": [
    {
      "questionText": "What is the purpose of the `uint256` keyword in Solidity?",
      "options": [
        "To define a signed integer variable.",
        "To define an unsigned 256-bit integer variable.",
        "To define a string variable.",
        "To define a boolean variable."
      ],
      "correctAnswer": 1,
      "userAnswer": 2,
      "isCorrect": false
    },
    {
      "questionText": "Which data structure in Solidity is most similar to a dictionary or hash table?",
      "options": [
        "Array",
        "Struct",
        "Enum",
        "Mapping"
      ],
      "correctAnswer": 3,
      "userAnswer": 1,
      "isCorrect": false
    },
    {
      "questionText": "What is the purpose of the `onlyOwner` modifier?",
      "options": [
        "To allow any user to call a function.",
        "To restrict a function's execution to the contract's owner.",
        "To specify the return type of a function.",
        "To define the parameters of a function."
      ],
      "correctAnswer": 1,
      "userAnswer": 2,
      "isCorrect": false
    },
    {
      "questionText": "How can a smart contract receive Ether?",
      "options": [
        "By using the `receive` function.",
        "By using the `payable` modifier on a function.",
        "By using the `transfer` function.",
        "By using the `send` function."
      ],
      "correctAnswer": 1,
      "userAnswer": 1,
      "isCorrect": true
    },
    {
      "questionText": "What keyword is used to create a new contract that inherits properties and functions from an existing contract?",
      "options": [
        "extends",
        "inherits",
        "is",
        "using"
      ],
      "correctAnswer": 2,
      "userAnswer": 1,
      "isCorrect": false
    }
  ],
  "score": 0
}